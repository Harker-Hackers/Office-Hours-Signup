<head>
    <%- include(`${base}/views/partials/head.ejs`, { title: "Portal" }) %>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js"></script>
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css' rel='stylesheet' />
</head>
<body class="ms-4 me-4">
    <h1>Student Home</h1>
    <input id="addteacher"></input>
    <button onclick="addTeachers([document.getElementById('addteacher').value])">Add teacher (put id above)</button>
    <ul>
        <% for(let i in teachers){%>
            <li onclick="confirm('Do you want to delete this teacher?')&&deleteTeachers(['<%- i %>'])"><a href="#" onclick=""><%- teachers[i] %></a></li>
        <% } %>
    </ul>
    <select name="teachers" id="tsc_selection" onchange="showSlots(this.value)">
        <option value="" disabled selected>Select a teacher</option>
        <% for(let i in teachers){%>
            <option value="<%- i %>"><%- teachers[i] %></option>
        <% } %>
    </select>
    <div id='calendar'></div>
    <script>
        const DEFAULT_SLOT_COLOR="#3A5AFF";
        const REMOVE_SLOT_COLOR="#FFADAD";
        const CREATE_SLOT_COLOR="#DDDDDD";
        let my_slots=<%- JSON.stringify(slots) %>;
        let teacher_slots=<%- JSON.stringify(teacher_slots) %>;
        let teachers=<%- JSON.stringify(teachers) %>;
        const email="<%- email %>";
        async function addTeachers(teachers){
            try{
                let r=await fetch("/api/add_teachers", {
                    method: "POST",
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({"teachers":teachers})
                })
                let success=await r.json();
            } catch(err) {
                console.log(err);//ev.remove();
            }
        }
        async function setTeachers(teacher_ids){
            try{
                let r=await fetch("/api/change_teachers", {
                    method: "POST",
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({"teachers":teacher_ids})
                })
                let success=await r.json();
            } catch(err) {
            }
        }
        async function deleteTeachers(teacher_ids){try{
                let r=await fetch("/api/delete_teachers",{method:"POST",headers:{"Accept": "application/json","Content-Type": "application/json"},body:JSON.stringify({
                    "teachers":teacher_ids
                })});
                let success=await r.json();
            }catch(err){}
        }
        function showSlots(teacher_id)
        {
            calendar.getEvents().forEach((ev)=>{
                console.log(ev.extendedProps.teacher_id);
                if(ev.extendedProps.teacher_id==teacher_id||(ev.extendedProps.student_email==email))
                    ev.setProp("display","auto");
                else
                    ev.setProp("display","none")
            })
        }
        async function signMeeting(ev)
        {
            try {
                ev.setProp("backgroundColor",DEFAULT_SLOT_COLOR)
                let r = await fetch("/api/join_meeting", {
                    method: "POST",
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({"id":ev.extendedProps.slot_id})
                })
                let success=await r.json();
                if(success.success)
                    ev.setExtendedProp("student_email",email)
                else
                    throw new Error()
            } catch(err){ev.setProp("backgroundColor",CREATE_SLOT_COLOR)}
        }
        async function cancelMeeting(ev)
        {
            try{
                ev.setProp("backgroundColor",CREATE_SLOT_COLOR);
                let r = await fetch("/api/leave_meeting", {
                    method: "POST",
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({"id":ev.extendedProps.slot_id})
                })
                let success=await r.json();
                if(success)
                    ev.setExtendedProp("student_email","")
                else
                    throw new Error();
            } catch(err){console.log(err);ev.setProp("backgroundColor",DEFAULT_SLOT_COLOR)}
        }
        function createSlotEvent(slot,z)
        {
            calendar.addEvent({start:slot.date+"T"+slot.startTime,end:slot.date+"T"+slot.endTime,
                title:"Meeting",slot_id:slot._id,teacher_id:slot.teacher_id,
                backgroundColor:(slot.student_email?DEFAULT_SLOT_COLOR:CREATE_SLOT_COLOR),student_email:slot.student_email,
                display:z?"auto":"none"
            });
        }
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            window.calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                eventClick: (info) => {
                    let ev=info.event;
                    if(ev.extendedProps.student_email=="")
                        confirm("Do you want to sign up for this meeting?")&&signMeeting(info.event);
                    else
                        confirm("Do you want to cancel this meeting?")&&cancelMeeting(info.event);
                }
            });
            for(let i=0;i<teacher_slots.length;i++) {
                createSlotEvent(teacher_slots[i],false);
            }
            calendar.render();
        });
    </script>
</body>